services:
  db:
    image: ${POSTGRES_IMAGE:-postgres:12}
    container_name: ${POSTGRES_CONTAINER_NAME:-sonarqube-db}
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-sonar}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sonar}
      POSTGRES_DB: ${POSTGRES_DB:-sonar}
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT_HOST:-5432}:5432"   # host:container
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sonar} -d ${POSTGRES_DB:-sonar}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sonarqube-net

  sonarqube:
    image: ${SONAR_IMAGE:-sonarqube:community}
    container_name: ${SONAR_CONTAINER_NAME:-sonarqube}
    depends_on:
      db:
        condition: service_healthy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/${POSTGRES_DB:-sonar}
      SONAR_JDBC_USERNAME: ${POSTGRES_USER:-sonar}
      SONAR_JDBC_PASSWORD: ${POSTGRES_PASSWORD:-sonar}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "${SONARQUBE_PORT_HOST:-9000}:9000"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9000/api/system/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - sonarqube-net

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:

networks:
  sonarqube-net:
    driver: bridge
